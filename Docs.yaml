openapi: 3.0.0
info:
  title: Masar-App API
  description: API documentation for the Masar-App project, connecting graduates with job and training opportunities.
  version: 1.0.0

servers:
  - url: http://127.0.0.1:8000/api/v1
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # --- Authentication & User Schemas ---
    AuthResponse:
      type: object
      properties:
        message:
          type: string
          description: A descriptive message about the authentication process.
        access_token:
          type: string
          description: The bearer token for accessing protected routes.
        token_type:
          type: string
          description: The type of the token (always "Bearer").
        user:
          $ref: '#/components/schemas/User'
      required:
        - message
        - access_token
        - token_type
        - user

    User:
      type: object
      properties:
        UserID:
          type: integer
          format: int64
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        email_verified:
          type: boolean
        phone:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
          format: url
        status:
          type: string
          enum: [مفعل, معلق, محذوف]
        type:
          type: string
          enum: [خريج, خبير استشاري, مدير شركة, Admin]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        profile:
          $ref: '#/components/schemas/Profile'
          nullable: true
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillWithPivot'
        company:
          $ref: '#/components/schemas/Company'
          nullable: true
      required:
        - UserID
        - first_name
        - last_name
        - username
        - email
        - email_verified
        - status
        - type
        - created_at
        - updated_at

    Profile:
      type: object
      properties:
        ProfileID:
          type: integer
          format: int64
        UserID:
          type: integer
          format: int64
        University:
          type: string
          nullable: true
        GPA:
          type: string
          nullable: true
        "Personal Description":
          type: string
          nullable: true
        "Technical Description":
          type: string
          nullable: true
        "Git Hyper Link":
          type: string
          nullable: true
          format: url
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - ProfileID
        - UserID
        - created_at
        - updated_at

    Skill:
      type: object
      properties:
        SkillID:
          type: integer
          format: int64
        Name:
          type: string
      required:
        - SkillID
        - Name

    SkillWithPivot:
      allOf:
        - $ref: '#/components/schemas/Skill'
        - type: object
          properties:
            pivot:
              $ref: '#/components/schemas/UserSkillPivot'
          required:
            - pivot

    UserSkillPivot:
      type: object
      properties:
        UserID:
          type: integer
          format: int64
        SkillID:
          type: integer
          format: int64
        Stage:
          type: string
          nullable: true
          enum: [مبتدئ, متوسط, متقدم]
      required:
        - UserID
        - SkillID

    Article:
      type: object
      properties:
        ArticleID:
          type: integer
          format: int64
        UserID:
          type: integer
          format: int64
        Title:
          type: string
        Description:
          type: string
        Date:
          type: string
          format: date
        Type:
          type: string
          nullable: true
        "Article Photo":
          type: string
          nullable: true
          format: url
        pdf_attachment:
          type: string
          nullable: true
          format: url
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
          nullable: true
      required:
        - ArticleID
        - UserID
        - Title
        - Description
        - Date
        - created_at
        - updated_at

    JobOpportunity:
      type: object
      properties:
        JobID:
          type: integer
          format: int64
        UserID:
          type: integer
          format: int64
        "Job Title":
          type: string
        "Job Description":
          type: string
        Qualification:
          type: string
          nullable: true
        Site:
          type: string
          nullable: true
        Date:
          type: string
          format: date
        Skills:
          type: string
          nullable: true
        Type:
          type: string
          enum: [وظيفة, تدريب]
        "End Date":
          type: string
          format: date
          nullable: true
        Status:
          type: string
          enum: [مفعل, معلق, محذوف]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
          nullable: true
      required:
        - JobID
        - UserID
        - "Job Title"
        - "Job Description"
        - Date
        - Type
        - Status
        - created_at
        - updated_at

    TrainingCourse:
      type: object
      properties:
        CourseID:
          type: integer
          format: int64
        UserID:
          type: integer
          format: int64
        "Course name":
          type: string
        "Trainers name":
          type: string
          nullable: true
        "Course Description":
          type: string
          nullable: true
        Site:
          type: string
          nullable: true
        "Trainers Site":
          type: string
          nullable: true
        "Start Date":
          type: string
          format: date
          nullable: true
        "End Date":
          type: string
          format: date
          nullable: true
        "Enroll Hyper Link":
          type: string
          nullable: true
          format: url
        Stage:
          type: string
          nullable: true
        Certificate:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        creator:
          $ref: '#/components/schemas/User'
          nullable: true
      required:
        - CourseID
        - UserID
        - "Course name"
        - created_at
        - updated_at

    Company:
      type: object
      properties:
        CompanyID:
          type: integer
          format: int64
        UserID:
          type: integer
          format: int64
          nullable: true
        Name:
          type: string
        Email:
          type: string
          format: email
          nullable: true
        Phone:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        Country:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        "Detailed Address":
          type: string
          nullable: true
        Media:
          type: string
          nullable: true
        "Web site":
          type: string
          nullable: true
          format: url
        status:
          type: string
          enum: [pending, approved, rejected]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
          nullable: true
      required:
        - CompanyID
        - Name
        - status
        - created_at
        - updated_at

    Group:
      type: object
      properties:
        GroupID:
          type: integer
          format: int64
        "Telegram Hyper Link":
          type: string
          nullable: true
          format: url
      required:
        - GroupID

    JobApplication:
      type: object
      properties:
        ID:
          type: integer
          format: int64
        UserID:
          type: integer
          format: int64
        JobID:
          type: integer
          format: int64
        Status:
          type: string
          nullable: true
        Date:
          type: string
          format: date
        Description:
          type: string
          nullable: true
        CV:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        job_opportunity:
          $ref: '#/components/schemas/JobOpportunity'
          nullable: true
      required:
        - ID
        - UserID
        - JobID
        - Date
        - created_at
        - updated_at

    Enrollment:
      type: object
      properties:
        EnrollmentID:
          type: integer
          format: int64
        UserID:
          type: integer
          format: int64
        CourseID:
          type: integer
          format: int64
        Status:
          type: string
          nullable: true
          enum: [مكتمل, قيد التقدم, ملغي]
        Date:
          type: string
          format: date
        "Complet Date":
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        training_course:
          $ref: '#/components/schemas/TrainingCourse'
          nullable: true
      required:
        - EnrollmentID
        - UserID
        - CourseID
        - Date
        - created_at
        - updated_at

    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        notifiable_type:
          type: string
        notifiable_id:
          type: integer
        data:
          type: object
        read_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - type
        - notifiable_type
        - notifiable_id
        - data
        - created_at
        - updated_at

    # --- Generic Response Schemas ---
    PaginatedResponse:
      type: object
      properties:
        current_page:
          type: integer
        first_page_url:
          type: string
          format: url
        from:
          type: integer
          nullable: true
        last_page:
          type: integer
        last_page_url:
          type: string
          format: url
        links:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: url
                nullable: true
              label:
                type: string
              active:
                type: boolean
        next_page_url:
          type: string
          format: url
          nullable: true
        path:
          type: string
          format: url
        per_page:
          type: integer
        prev_page_url:
          type: string
          format: url
          nullable: true
        to:
          type: integer
          nullable: true
        total:
          type: integer
      required:
        - current_page
        - first_page_url
        - last_page
        - last_page_url
        - links
        - path
        - per_page
        - total

    PaginatedArticles:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Article'

    PaginatedJobs:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/JobOpportunity'

    PaginatedCourses:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TrainingCourse'

    PaginatedCompanies:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Company'

    PaginatedUsers:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/User'

    PaginatedNotifications:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Notification'

    # --- Error Schemas ---
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

paths:
  /register:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
                phone:
                  type: string
                  nullable: true
                type:
                  type: string
                  enum: [خريج, خبير استشاري, مدير شركة]
              required:
                - first_name
                - last_name
                - username
                - email
                - password
                - password_confirmation
                - type
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /login:
    post:
      summary: Login a user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Account not active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /logout:
    post:
      summary: Logout a user
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /user:
    get:
      summary: Get authenticated user details
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /profile:
    get:
      summary: Get user profile
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update user profile
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                phone:
                  type: string
                  nullable: true
                photo:
                  type: string
                  format: binary
                  nullable: true
                University:
                  type: string
                  nullable: true
                GPA:
                  type: string
                  nullable: true
                "Personal Description":
                  type: string
                  nullable: true
                "Technical Description":
                  type: string
                  nullable: true
                "Git Hyper Link":
                  type: string
                  format: url
                  nullable: true
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /profile/skills:
    post:
      summary: Sync user skills
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skills:
                  type: array
                  items:
                    type: integer
              required:
                - skills
      responses:
        '200':
          description: Skills synced successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /my-applications:
    get:
      summary: Get my job applications
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of job applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'

  /my-applications/{job_application}:
    delete:
      summary: Delete a job application
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      parameters:
        - name: job_application
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Application deleted successfully
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /my-enrollments:
    get:
      summary: Get my course enrollments
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of course enrollments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'

  /my-enrollments/{enrollment}:
    delete:
      summary: Delete a course enrollment
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      parameters:
        - name: enrollment
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Enrollment deleted successfully
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-requests:
    post:
      summary: Request to create a company
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Email:
                  type: string
                  format: email
                  nullable: true
                Phone:
                  type: string
                  nullable: true
                Description:
                  type: string
                  nullable: true
                Country:
                  type: string
                  nullable: true
                City:
                  type: string
                  nullable: true
                "Detailed Address":
                  type: string
                  nullable: true
                Media:
                  type: string
                  format: binary
                  nullable: true
                "Web site":
                  type: string
                  format: url
                  nullable: true
              required:
                - Name
      responses:
        '201':
          description: Request submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recommendations:
    get:
      summary: Get recommendations
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of recommendations
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommended_jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobOpportunity'
                  recommended_courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingCourse'

  /notifications:
    get:
      summary: Get user notifications
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotifications'

  /notifications/{notification}:
    put:
      summary: Mark a notification as read
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      parameters:
        - name: notification
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification marked as read
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a notification
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      parameters:
        - name: notification
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Notification deleted successfully
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notifications/mark-all-as-read:
    post:
      summary: Mark all notifications as read
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: All notifications marked as read

  # --- Public Resources ---
  /articles:
    get:
      summary: Get all articles
      tags: [Public Resources]
      responses:
        '200':
          description: List of articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticles'

  /articles/{article}:
    get:
      summary: Get a single article
      tags: [Public Resources]
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Article details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /jobs:
    get:
      summary: Get all job opportunities
      tags: [Public Resources]
      responses:
        '200':
          description: List of job opportunities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobs'

  /jobs/{job_opportunity}:
    get:
      summary: Get a single job opportunity
      tags: [Public Resources]
      parameters:
        - name: job_opportunity
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Job opportunity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOpportunity'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Apply for a job opportunity
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      parameters:
        - name: job_opportunity
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  type: string
                  nullable: true
                CV:
                  type: string
                  nullable: true
      responses:
        '201':
          description: Application submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /courses:
    get:
      summary: Get all training courses
      tags: [Public Resources]
      responses:
        '200':
          description: List of training courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourses'

  /courses/{training_course}:
    get:
      summary: Get a single training course
      tags: [Public Resources]
      parameters:
        - name: training_course
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Training course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCourse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Enroll in a training course
      tags: [Authenticated User]
      security:
        - bearerAuth: []
      parameters:
        - name: training_course
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Enrolled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /companies:
    get:
      summary: Get all companies
      tags: [Public Resources]
      responses:
        '200':
          description: List of companies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanies'

  /companies/{company}:
    get:
      summary: Get a single company
      tags: [Public Resources]
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Company details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /skills:
    get:
      summary: Get all skills
      tags: [Public Resources]
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of skills
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'

  /groups:
    get:
      summary: Get all groups
      tags: [Public Resources]
      responses:
        '200':
          description: List of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'

  /groups/{group}:
    get:
      summary: Get a single group
      tags: [Public Resources]
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Group details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --- Company Manager Routes ---
  /company-manager/company:
    get:
      summary: Get managed company
      tags: [Company Manager]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Company details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update managed company
      tags: [Company Manager]
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Email:
                  type: string
                  format: email
                  nullable: true
                Phone:
                  type: string
                  nullable: true
                Description:
                  type: string
                  nullable: true
                Country:
                  type: string
                  nullable: true
                City:
                  type: string
                  nullable: true
                "Detailed Address":
                  type: string
                  nullable: true
                Media:
                  type: string
                  nullable: true
                "Web site":
                  type: string
                  format: url
                  nullable: true
      responses:
        '200':
          description: Company updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-manager/company-request:
    post:
      summary: Request to create a company (as a manager)
      tags: [Company Manager]
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Email:
                  type: string
                  format: email
                  nullable: true
                Phone:
                  type: string
                  nullable: true
                Description:
                  type: string
                  nullable: true
                Country:
                  type: string
                  nullable: true
                City:
                  type: string
                  nullable: true
                "Detailed Address":
                  type: string
                  nullable: true
                Media:
                  type: string
                  format: binary
                  nullable: true
                "Web site":
                  type: string
                  format: url
                  nullable: true
              required:
                - Name
      responses:
        '201':
          description: Request submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-manager/jobs:
    get:
      summary: Get managed jobs
      tags: [Company Manager]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of managed jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobs'
    post:
      summary: Create a new job
      tags: [Company Manager]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "Job Title":
                  type: string
                "Job Description":
                  type: string
                Qualification:
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                Date:
                  type: string
                  format: date
                Skills:
                  type: string
                  nullable: true
                Type:
                  type: string
                  enum: [وظيفة, تدريب]
                "End Date":
                  type: string
                  format: date
                  nullable: true
                Status:
                  type: string
                  enum: [مفعل, معلق, محذوف]
              required:
                - "Job Title"
                - "Job Description"
                - Date
                - Type
                - Status
      responses:
        '201':
          description: Job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOpportunity'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-manager/jobs/{job}:
    get:
      summary: Get a managed job
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: job
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOpportunity'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a managed job
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: job
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "Job Title":
                  type: string
                "Job Description":
                  type: string
                Qualification:
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                Date:
                  type: string
                  format: date
                Skills:
                  type: string
                  nullable: true
                Type:
                  type: string
                  enum: [وظيفة, تدريب]
                "End Date":
                  type: string
                  format: date
                  nullable: true
                Status:
                  type: string
                  enum: [مفعل, معلق, محذوف]
      responses:
        '200':
          description: Job updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOpportunity'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a managed job
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: job
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Job deleted successfully
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-manager/jobs/{job_opportunity}/applicants:
    get:
      summary: Get applicants for a job
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: job_opportunity
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of applicants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-manager/courses:
    get:
      summary: Get managed courses
      tags: [Company Manager]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of managed courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourses'
    post:
      summary: Create a new course
      tags: [Company Manager]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "Course name":
                  type: string
                "Trainers name":
                  type: string
                  nullable: true
                "Course Description":
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                "Trainers Site":
                  type: string
                  nullable: true
                "Start Date":
                  type: string
                  format: date
                  nullable: true
                "End Date":
                  type: string
                  format: date
                  nullable: true
                "Enroll Hyper Link":
                  type: string
                  format: url
                  nullable: true
                Stage:
                  type: string
                  nullable: true
                Certificate:
                  type: string
                  nullable: true
              required:
                - "Course name"
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCourse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-manager/courses/{course}:
    get:
      summary: Get a managed course
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: course
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCourse'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a managed course
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: course
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "Course name":
                  type: string
                "Trainers name":
                  type: string
                  nullable: true
                "Course Description":
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                "Trainers Site":
                  type: string
                  nullable: true
                "Start Date":
                  type: string
                  format: date
                  nullable: true
                "End Date":
                  type: string
                  format: date
                  nullable: true
                "Enroll Hyper Link":
                  type: string
                  format: url
                  nullable: true
                Stage:
                  type: string
                  nullable: true
                Certificate:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCourse'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a managed course
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: course
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Course deleted successfully
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company-manager/courses/{training_course}/enrollees:
    get:
      summary: Get enrollees for a course
      tags: [Company Manager]
      security:
        - bearerAuth: []
      parameters:
        - name: training_course
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of enrollees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --- Consultant Routes ---
  /consultant/articles:
    get:
      summary: Get managed articles
      tags: [Consultant]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of managed articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticles'
    post:
      summary: Create a new article
      tags: [Consultant]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Title:
                  type: string
                Description:
                  type: string
                Date:
                  type: string
                  format: date
                Type:
                  type: string
                  nullable: true
                "Article Photo":
                  type: string
                  format: binary
                  nullable: true
                pdf_attachment:
                  type: string
                  format: binary
                  nullable: true
              required:
                - Title
                - Description
                - Date
      responses:
        '201':
          description: Article created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /consultant/articles/{article}:
    get:
      summary: Get a managed article
      tags: [Consultant]
      security:
        - bearerAuth: []
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Article details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a managed article
      tags: [Consultant]
      security:
        - bearerAuth: []
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Title:
                  type: string
                Description:
                  type: string
                Date:
                  type: string
                  format: date
                Type:
                  type: string
                  nullable: true
                "Article Photo":
                  type: string
                  format: binary
                  nullable: true
                pdf_attachment:
                  type: string
                  format: binary
                  nullable: true
      responses:
        '200':
          description: Article updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a managed article
      tags: [Consultant]
      security:
        - bearerAuth: []
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Article deleted successfully
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --- Admin Routes ---
  /admin/users:
    get:
      summary: Get all users
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsers'
    post:
      summary: Create a new user
      tags: [Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                phone:
                  type: string
                  nullable: true
                type:
                  type: string
                  enum: [خريج, خبير استشاري, مدير شركة, Admin]
                status:
                  type: string
                  enum: [مفعل, معلق, محذوف]
                email_verified:
                  type: boolean
              required:
                - first_name
                - last_name
                - username
                - email
                - password
                - type
                - status
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/users/{user}:
    get:
      summary: Get a single user
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a user
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  nullable: true
                phone:
                  type: string
                  nullable: true
                type:
                  type: string
                  enum: [خريج, خبير استشاري, مدير شركة, Admin]
                status:
                  type: string
                  enum: [مفعل, معلق, محذوف]
                email_verified:
                  type: boolean
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a user
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/skills:
    post:
      summary: Create a new skill
      tags: [Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
              required:
                - Name
      responses:
        '201':
          description: Skill created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/skills/{skill}:
    get:
      summary: Get a single skill
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: skill
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Skill details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a skill
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: skill
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
              required:
                - Name
      responses:
        '200':
          description: Skill updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a skill
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: skill
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Skill deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/groups:
    post:
      summary: Create a new group
      tags: [Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "Telegram Hyper Link":
                  type: string
                  format: url
              required:
                - "Telegram Hyper Link"
      responses:
        '201':
          description: Group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/groups/{group}:
    put:
      summary: Update a group
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "Telegram Hyper Link":
                  type: string
                  format: url
              required:
                - "Telegram Hyper Link"
      responses:
        '200':
          description: Group updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a group
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Group deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/companies:
    post:
      summary: Create a new company
      tags: [Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                Name:
                  type: string
                Email:
                  type: string
                  format: email
                  nullable: true
                Phone:
                  type: string
                  nullable: true
                Description:
                  type: string
                  nullable: true
                Country:
                  type: string
                  nullable: true
                City:
                  type: string
                  nullable: true
                "Detailed Address":
                  type: string
                  nullable: true
                Media:
                  type: string
                  nullable: true
                "Web site":
                  type: string
                  format: url
                  nullable: true
              required:
                - UserID
                - Name
      responses:
        '201':
          description: Company created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/companies/{company}:
    put:
      summary: Update a company
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Email:
                  type: string
                  format: email
                  nullable: true
                Phone:
                  type: string
                  nullable: true
                Description:
                  type: string
                  nullable: true
                Country:
                  type: string
                  nullable: true
                City:
                  type: string
                  nullable: true
                "Detailed Address":
                  type: string
                  nullable: true
                Media:
                  type: string
                  nullable: true
                "Web site":
                  type: string
                  format: url
                  nullable: true
      responses:
        '200':
          description: Company updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a company
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Company deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/articles:
    post:
      summary: Create a new article
      tags: [Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                Title:
                  type: string
                Description:
                  type: string
                Date:
                  type: string
                  format: date
                Type:
                  type: string
                  nullable: true
                "Article Photo":
                  type: string
                  nullable: true
              required:
                - UserID
                - Title
                - Description
                - Date
      responses:
        '201':
          description: Article created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/articles/{article}:
    put:
      summary: Update an article
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                Title:
                  type: string
                Description:
                  type: string
                Date:
                  type: string
                  format: date
                Type:
                  type: string
                  nullable: true
                "Article Photo":
                  type: string
                  nullable: true
      responses:
        '200':
          description: Article updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete an article
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Article deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/jobs:
    post:
      summary: Create a new job opportunity
      tags: [Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                "Job Title":
                  type: string
                "Job Description":
                  type: string
                Qualification:
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                Date:
                  type: string
                  format: date
                Skills:
                  type: string
                  nullable: true
                Type:
                  type: string
                  enum: [وظيفة, تدريب]
                "End Date":
                  type: string
                  format: date
                  nullable: true
                Status:
                  type: string
                  enum: [مفعل, معلق, محذوف]
              required:
                - UserID
                - "Job Title"
                - "Job Description"
                - Date
                - Type
                - Status
      responses:
        '201':
          description: Job opportunity created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOpportunity'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/jobs/{job}:
    put:
      summary: Update a job opportunity
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: job
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                "Job Title":
                  type: string
                "Job Description":
                  type: string
                Qualification:
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                Date:
                  type: string
                  format: date
                Skills:
                  type: string
                  nullable: true
                Type:
                  type: string
                  enum: [وظيفة, تدريب]
                "End Date":
                  type: string
                  format: date
                  nullable: true
                Status:
                  type: string
                  enum: [مفعل, معلق, محذوف]
      responses:
        '200':
          description: Job opportunity updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOpportunity'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a job opportunity
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: job
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Job opportunity deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/courses:
    post:
      summary: Create a new training course
      tags: [Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                "Course name":
                  type: string
                "Trainers name":
                  type: string
                  nullable: true
                "Course Description":
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                "Trainers Site":
                  type: string
                  nullable: true
                "Start Date":
                  type: string
                  format: date
                  nullable: true
                "End Date":
                  type: string
                  format: date
                  nullable: true
                "Enroll Hyper Link":
                  type: string
                  format: url
                  nullable: true
                Stage:
                  type: string
                  nullable: true
                Certificate:
                  type: string
                  nullable: true
              required:
                - UserID
                - "Course name"
      responses:
        '201':
          description: Training course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCourse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/courses/{course}:
    put:
      summary: Update a training course
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: course
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                "Course name":
                  type: string
                "Trainers name":
                  type: string
                  nullable: true
                "Course Description":
                  type: string
                  nullable: true
                Site:
                  type: string
                  nullable: true
                "Trainers Site":
                  type: string
                  nullable: true
                "Start Date":
                  type: string
                  format: date
                  nullable: true
                "End Date":
                  type: string
                  format: date
                  nullable: true
                "Enroll Hyper Link":
                  type: string
                  format: url
                  nullable: true
                Stage:
                  type: string
                  nullable: true
                Certificate:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Training course updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCourse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a training course
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: course
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Training course deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/company-requests:
    get:
      summary: Get pending company requests
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of pending company requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanies'

  /admin/company-requests/{company}/approve:
    put:
      summary: Approve a company request
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Company approved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/company-requests/{company}/reject:
    put:
      summary: Reject a company request
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Company rejected successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'